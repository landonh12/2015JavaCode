// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc364;

import org.usfirst.frc364.commands.*;
import edu.wpi.first.wpilibj.smartdashboard.SmartDashboard;
import edu.wpi.first.wpilibj.*;
import edu.wpi.first.wpilibj.buttons.*;

public class OI {
	
    public JoystickButton pullHooksUp;
    public JoystickButton dropHooksDown;
    public Joystick leftJoystick;
    public JoystickButton shiftLow;
    public JoystickButton shiftHigh;
    public Joystick rightJoystick;
    public JoystickButton closeArms;
    public JoystickButton openArms;
    public JoystickButton dropSetPoint;
    public JoystickButton liftSetPoint;
    public JoystickButton transportSetPoint;
    public Joystick controller;

    public OI() {

        controller = new Joystick(2);
        
        transportSetPoint = new JoystickButton(controller, 1);
        transportSetPoint.whenPressed(new setPointControl());
        liftSetPoint = new JoystickButton(controller, 1);
        liftSetPoint.whenPressed(new setPointControl());
        dropSetPoint = new JoystickButton(controller, 1);
        dropSetPoint.whenPressed(new setPointControl());
        openArms = new JoystickButton(controller, 1);
        openArms.whenPressed(new armControl());
        closeArms = new JoystickButton(controller, 1);
        closeArms.whenPressed(new armControl());
        rightJoystick = new Joystick(1);
        
        shiftHigh = new JoystickButton(rightJoystick, 1);
        shiftHigh.whenPressed(new shiftControl());
        shiftLow = new JoystickButton(rightJoystick, 1);
        shiftLow.whenPressed(new shiftControl());
        leftJoystick = new Joystick(0);
        
        dropHooksDown = new JoystickButton(leftJoystick, 1);
        dropHooksDown.whileHeld(new canControl());
        pullHooksUp = new JoystickButton(leftJoystick, 1);
        pullHooksUp.whileHeld(new canControl());

    }
    
    public Joystick getleftJoystick() {
        return leftJoystick;
    }

    public Joystick getrightJoystick() {
        return rightJoystick;
    }

    public Joystick getcontroller() {
        return controller;
    }

}


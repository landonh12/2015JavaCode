// RobotBuilder Version: 1.5
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc364;
    
import edu.wpi.first.wpilibj.*;

import edu.wpi.first.wpilibj.livewindow.LiveWindow;

public class RobotMap {
    public static SpeedController drivesystemleftFront;
    public static SpeedController drivesystemleftRear;
    public static SpeedController drivesystemrightFront;
    public static SpeedController drivesystemrightRear;
    public static RobotDrive drivesystemrobotDrive;
    public static SpeedController intakeSystemleftArmMotor;
    public static SpeedController intakeSystemrightArmMotor;
    public static RobotDrive intakeSystemintakeDrive;
    public static SpeedController liftSystemliftMotor;
    public static AnalogInput liftSystemliftPot;
    public static SpeedController canSystemleftBurglar;
    public static SpeedController canSystemrightBurglar;
    public static DoubleSolenoid shiftSystemshiftPiston;
    public static DoubleSolenoid armSystemarmPiston;

    public static void init() {
        drivesystemleftFront = new Talon(1);
        LiveWindow.addActuator("Drivesystem", "leftFront", (Talon) drivesystemleftFront);
        
        drivesystemleftRear = new Talon(0);
        LiveWindow.addActuator("Drivesystem", "leftRear", (Talon) drivesystemleftRear);
        
        drivesystemrightFront = new Talon(3);
        LiveWindow.addActuator("Drivesystem", "rightFront", (Talon) drivesystemrightFront);
        
        drivesystemrightRear = new Talon(2);
        LiveWindow.addActuator("Drivesystem", "rightRear", (Talon) drivesystemrightRear);
        
        drivesystemrobotDrive = new RobotDrive(drivesystemleftFront, drivesystemleftRear,
              drivesystemrightFront, drivesystemrightRear);
        
        drivesystemrobotDrive.setSafetyEnabled(true);
        drivesystemrobotDrive.setExpiration(0.1);
        drivesystemrobotDrive.setSensitivity(0.5);
        drivesystemrobotDrive.setMaxOutput(1.0);

        intakeSystemleftArmMotor = new Talon(5);
        LiveWindow.addActuator("intakeSystem", "leftArmMotor", (Talon) intakeSystemleftArmMotor);
        
        intakeSystemrightArmMotor = new Talon(8);
        LiveWindow.addActuator("intakeSystem", "rightArmMotor", (Talon) intakeSystemrightArmMotor);
        
        intakeSystemintakeDrive = new RobotDrive(intakeSystemleftArmMotor, intakeSystemrightArmMotor);
        
        intakeSystemintakeDrive.setSafetyEnabled(true);
        intakeSystemintakeDrive.setExpiration(0.1);
        intakeSystemintakeDrive.setSensitivity(0.5);
        intakeSystemintakeDrive.setMaxOutput(1.0);
        

        liftSystemliftMotor = new Talon(4);
        LiveWindow.addActuator("liftSystem", "liftMotor", (Talon) liftSystemliftMotor);
        
        liftSystemliftPot = new AnalogInput(0);
        LiveWindow.addSensor("liftSystem", "liftPot", liftSystemliftPot);
        
        canSystemleftBurglar = new Talon(7);
        LiveWindow.addActuator("canSystem", "leftBurglar", (Talon) canSystemleftBurglar);
        
        canSystemrightBurglar = new Talon(6);
        LiveWindow.addActuator("canSystem", "rightBurglar", (Talon) canSystemrightBurglar);
        
        shiftSystemshiftPiston = new DoubleSolenoid(0, 0, 1);      
        LiveWindow.addActuator("shiftSystem", "shiftPiston", shiftSystemshiftPiston);
        
        armSystemarmPiston = new DoubleSolenoid(0, 2, 3);      
        LiveWindow.addActuator("armSystem", "armPiston", armSystemarmPiston);
        
    }
}
